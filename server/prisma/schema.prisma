generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  name             String
  email            String    @unique
  password         String
  pushSubscription Json?
  profileImageUrl  String?
  referrerId       Int?
  deletedAt        DateTime?

  pokes           Poke[]     @relation("user-poke")
  pokeds          Poke[]     @relation("user-poked")
  goingRelations  Relation[] @relation("user-from")
  comingRelations Relation[] @relation("user-to")
}

model Relation {
  id         Int     @id @default(autoincrement())
  fromUserId Int
  toUserId   Int
  isAccepted Boolean @default(true)

  fromUser User   @relation(name: "user-from", fields: [fromUserId], references: [id])
  toUser   User   @relation(name: "user-to", fields: [toUserId], references: [id])
  pokes    Poke[] @relation("relation-poke")
  pokeds   Poke[] @relation("relation-poked")

  @@unique([fromUserId, toUserId])
}

model Poke {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  payload    Json
  fromUserId Int
  toUserId   Int

  relationId        Int
  reverseRelationId Int

  fromUser        User     @relation(name: "user-poke", fields: [fromUserId], references: [id])
  toUser          User     @relation(name: "user-poked", fields: [toUserId], references: [id])
  relation        Relation @relation(name: "relation-poke", fields: [relationId], references: [id])
  reverseRelation Relation @relation(name: "relation-poked", fields: [reverseRelationId], references: [id])
}
